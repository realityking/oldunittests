<?php
/**
 * @copyright	Copyright (C) 2005 - 2012 Open Source Matters. All rights reserved.
 * @license	GNU General Public License version 2 or later; see LICENSE.txt
 * @package	JoomlaFramework
 */

require_once 'PHPUnit/Framework.php';
require_once JPATH_BASE.'/libraries/joomla/language/language.php';
require_once JPATH_BASE.'/libraries/joomla/utilities/string.php';

/**
 * Test class for JLanguage.
 * Generated by PHPUnit on 2009-10-27 at 15:18:20.
 */
class JLanguageTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var JLanguage
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new JLanguage;

		include_once 'inspectors.php';
	}

	/**
	 * Test the JLanguage::parse method
	 */
	public function testParse()
	{
		$lang = new JLanguageInspector('', true);

		$strings = $lang->parse(dirname(__FILE__).'/_ini/bad.ini');

		$errors = $lang->getProperty('errorfiles');
		$this->assertThat(
			count($errors),
			$this->equalTo(1),
			'Line: '.__LINE__.' bad ini file should have one error.'
		);

		// Slice the error string.
		$parts = explode('line(s)', array_pop($errors));

		$this->assertThat(
			trim($parts[1]),
			$this->equalTo('4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15'),
			'Line: '.__LINE__.' bad ini file should have several lines marked.'
		);
	}

    /**
     * @todo Implement testLoad().
     */
    public function testLoad()
    {
		// This method loads an extension language
		$extension1 = 'com_admin';
		$extension2 = 'com_sobi2';
		$basePath = '../../administrator/';
		$l1 = 'en-GB';
		$l2 = 'es-ES';
		$reloaded1 = false;
		$reloaded2 = true;
		$lang = new JLanguage('');

		// com_admin (exist), OK
		$this->assertTrue(
			$lang->load($extension1,$basePath,$l1,$reloaded1)
		);

		$this->assertTrue(
			$lang->load($extension1,$basePath,$l2,$reloaded1)
		);

		// com_sobi2 (not exist), KO
		$this->assertFalse(
			$lang->load($extension2,$basePath,$l1,$reloaded1)
		);

		$this->assertFalse(
			$lang->load($extension2,$basePath,$l2,$reloaded1)
		);

		// com_admin (exist), OK
		$this->assertTrue(
			$lang->load($extension1,$basePath,$l1,$reloaded2)
		);

		$this->assertTrue(
			$lang->load($extension1,$basePath,$l2,$reloaded2)
		);

		// com_sobi2 (not exist), KO
		$this->assertFalse(
			$lang->load($extension2,$basePath,$l1,$reloaded2)
		);

		$this->assertFalse(
			$lang->load($extension2,$basePath,$l2,$reloaded2)
		);
    }

    /**
     * @todo Implement testGetPaths().
     */
    public function testGetPaths()
    {
		$extension1 = '';
		$extension2 = 'com_sobi2';
		$extension3 = 'joomla';
		$lang = new JLanguage('');

		// extension = joomla, returns array with language path
		$this->assertNotNull(
			$lang->getPaths($extension3)
		);

		// No call parameter, returns array with language path
		$this->assertNotNull(
			$lang->getPaths()
		);
    }
}
